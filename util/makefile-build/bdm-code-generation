#!/bin/bash
# -----------------------------------------------------------------------------
#
# Copyright (C) 2021 CERN & University of Surrey for the benefit of the
# BioDynaMo collaboration. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
#
# See the LICENSE file distributed with this work for details.
# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# -----------------------------------------------------------------------------

# This script generates ROOT dictionaries for NON CMake builds

if [ $# -lt 4 ]; then
    echo "Wrong number of arguments"
    echo "Usage: bdm-code-generation DICTIONARY BDM_CONFIG [CXX_FLAGS] -i include-dir1 [include-dir2] -h header1.h [header2.h ...]"
    echo "   DICTIONARY    file name of the dictionary that gets generated"
    echo "                 (e.g., my-sim_dict.cc)"
    echo "   BDM_CONFIG    bdm config command. Used to pass optional compiler and build type"
    echo "                 (e.g., \"bdm-config --debug --opt\")"
    echo "   CXX_FLAGS     additional CXX flags (optional). Add includes or defines only!"
    echo "   INCLUDE_DIRS  at least one include directory containing the headers"
    echo "   HEADERS       at least one header file containing the biodynamo definitions"
    exit
fi

DICT=$1
shift
BDM_CONFIG=$1
shift
if [ $1 != "-i" ]; then
  ADDITIONAL_CXX_FLAGS=$1
  shift
  while [ $1 != "-i" ]; do
    ADDITIONAL_CXX_FLAGS="$ADDITIONAL_CXX_FLAGS $1"
    shift
  done
fi
shift
if [ $1 != "-h" ]; then
  INCLUDE_DIRS=$1
  shift
  while [ $1 != "-h" ]; do
    INCLUDE_DIRS="$INCLUDE_DIRS $1"
    shift
  done
fi
shift
HEADERS=$@

SELECTIONFILE=$(${BDM_CONFIG} --cmakedir)/selection.xml

CXX_INCLUDES=$(${BDM_CONFIG} --cxxincludes | sed 's|-isystem |-I|g')

CXX_DEFINES=$(${BDM_CONFIG} --cxxdefines)

paraview_version_raw=$(${BDM_CONFIG} --pv-version)
echo "DEBUG: Raw output from bdm-config --pv-version: '$paraview_version_raw'"

# Remove any extra text and get just the version number
paraview_version=$(echo "$paraview_version_raw" | sed 's/.*: *//' | tr -d '\n' | tr -d ' ')
echo "DEBUG: Cleaned paraview_version: '$paraview_version'"

# If version is empty, "None", or contains @CMAKE, try to determine from system
if [ -z "$paraview_version" ] || [ "$paraview_version" = "None" ] || [[ "$paraview_version" == *"@CMAKE"* ]]; then
  # Try to detect based on OS
  if [ "$(uname)" = "Darwin" ]; then
    paraview_version="5.10"
  else
    # For Linux, try to detect Ubuntu version
    if command -v lsb_release >/dev/null 2>&1; then
      ubuntu_version=$(lsb_release -rs 2>/dev/null)
      case "$ubuntu_version" in
        "22.04") paraview_version="5.9" ;;
        "24.04") paraview_version="5.13" ;;
        *) paraview_version="5.9" ;;
      esac
    else
      paraview_version="5.9"
    fi
  fi
  echo "Warning: Could not determine ParaView version from bdm-config, detected system: $(uname), using: ${paraview_version}"
else
  echo "Using ParaView version: ${paraview_version}"
fi

genreflex ${HEADERS} -o ${DICT} --noIncludePaths --select=${SELECTIONFILE} ${CXX_DEFINES} ${CXX_INCLUDES} $ADDITIONAL_CXX_FLAGS

# Generate bdm dictionary and append to DICT
BDM_DICT=$(mktemp)
bdm-dictionary --output $BDM_DICT --out-of-source --include-dirs $INCLUDE_DIRS --headers $HEADERS --pvversion $paraview_version
echo "" >> $DICT
echo "// -------------------------------------------------------------------" >> $DICT
echo "// Start BioDynaMo dictionary" >> $DICT
cat $BDM_DICT >> $DICT
rm $BDM_DICT
